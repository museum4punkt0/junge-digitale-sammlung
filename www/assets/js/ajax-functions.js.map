{"version":3,"names":["JDSForm","constructor","element","hasWatchdog","this","formInitialized","formDisabled","nativeElement","submit","querySelector","reset","formChanged","jsonPopulatesIndex","formsMap","Map","selectGroups","selectGroupsValues","selects","alwaysDisabledOptions","formEls","virtualSelectConf","placeholder","noOptionsText","noSearchResultsText","searchPlaceholderText","allOptionsSelectedText","optionsSelectedText","optionSelectedText","moreText","emptyValue","search","disableSelectAll","silentInitialValueSet","autoSelectFirstOption","disableOptionGroupCheckbox","init","disabled","initRegularSelects","initJsonPopulators","querySelectorAll","forEach","addEventListener","onSelectChange","bind","initSelectGroupWatchdog","console","log","setSelectedOptions","permaDisabledOptions","disabledItems","getDisabledOptions","targetGroup","getAttribute","groupArray","get","item","indexOf","push","ev","target","set","setDisabledOptions","group","groupArrayValues","length","concat","getSelectedOptions","value","disOptions","i","setEnabledOptions","jsonElements","loadJson","id","initFormWatchdog","dataurl","elID","currentValue","lengthToWait","fetch","then","response","json","initJsonSelect","conf","Object","assign","ele","additionalClasses","VirtualSelect","jsonData","options","selectedValue","replaceAll","split","watchdogEnabled","wdForm","formEl","tagName","toLowerCase","checked","hasAttribute","fieldValid","label","document","name","classList","contains","setElementCheck","eventTarg","input","currentTarget","resetRadioGroup","val","setElementChanged","unsetElementChanged","bindToDOMElement","scope","el","inputTarget","ajaxHandler","window","check","error","add","remove","changeHandler","setAttribute","updateFormStatus","dispatchEvent","CustomEvent","detail","context","removeAttribute","status","containerpane","findParentContainer","parentNode","paneID","state","enableForm","enable","disableForm","disable","resetElement","form","setValue","resetToDefault","sendAjaxForm","targetformID","targetform","getElementById","btn_submit","click","checkImpulseRelationships","async","ajaxTarget","impulse","page","parentElement","url","location","protocol","host","pathname","impulseResult","warning","isValid","isInvalid","checkImpulseRelationshipsList","curator","parent","fetchDynamicExhibitionData","isCuratorLeader","exhibitionDataResult","curatorInExhibition","innerHTML","scrapeEmbed","urlvalue","replace","embed_preview","embed","data","code","providerName","twttr","widgets","load","createElement","src","body","appendChild","instgrm","Embeds","process","er","fileUpload","btn","progress","fileInput","file","files","formData","FormData","append","ajax","XMLHttpRequest","responseType","open","upload","onprogress","e","lengthComputable","percentage","Math","round","loaded","total","style","width","onload","readyState","sessionStorage","setItem","alert","reload","send","checkRadioGroupGallery","radios","getElementsByName","radiosArray","Array","prototype","slice","call","firstRadio","filter","radio","checkedRadio","find","usernameField","usernameDelayTimer","usernameDelay","checkUsername","clearTimeout","setTimeout","_path","usernameExists","handleExhibitTypeChange","createPhantomToggle","headline","message","func","contextCancel","funcCancel","dataCancel","confirmLabel"],"sources":["../../../src/js/components/JDSForm.js","../../../src/js/ajax-functions.js"],"sourcesContent":["//import { mapToStyles } from '@popperjs/core/lib/modifiers/computeStyles';\n\n/**\n * Form class that ahs its own watchdog for tracking changes,\n * reseting to default values after changes, setting statuses\n * for inputs, populating selects from json, and more\n * \n * Selects and multiselects are based on virtual-select.js\n */\n\nexport default class JDSForm {\n\n    constructor(element, hasWatchdog = true) {\n        this.formInitialized = false;\n        this.formDisabled = false;\n        this.nativeElement = element;\n        this.submit = this.nativeElement.querySelector('button[type=\"submit\"]');\n        this.reset = this.nativeElement.querySelector('button.btn-reset[type=\"button\"]');\n        this.hasWatchdog = hasWatchdog;\n        this.formChanged = false;\n        this.jsonPopulatesIndex = 0;\n        this.formsMap = new Map();\n        this.selectGroups = new Map();\n        this.selectGroupsValues = new Map();\n        this.selects = [];\n        this.alwaysDisabledOptions = [];\n        this.formEls;\n\n        this.virtualSelectConf = {\n            placeholder: 'Bitte wählen',\n            noOptionsText: 'Keine Optionen',\n            noSearchResultsText: 'Keine Ergebnisse',\n            searchPlaceholderText: 'Suchen...',\n            allOptionsSelectedText: 'Alle',\n            optionsSelectedText: 'ausgewählt',\n            optionSelectedText: 'ausgewählt',\n            moreText: 'mehr...',\n            emptyValue: \"\",\n\n            search: true,\n            disableSelectAll: true,\n            silentInitialValueSet: true,\n            autoSelectFirstOption: false,\n            disableOptionGroupCheckbox: true,\n        };\n\n        this.init();\n    }\n\n    /**\n     * Init the form\n     */\n    init() {\n        this.submit.disabled = true;\n\n        if (this.reset)\n            this.reset.disabled = true;\n\n        this.initRegularSelects();\n        this.initJsonPopulators();\n\n        this.selects = this.nativeElement.querySelectorAll('.select-has-group');\n\n        this.selects.forEach(element => {\n            element.addEventListener('change', this.onSelectChange.bind(this.nativeElement));\n        });\n\n        this.nativeElement.selects = this.selects;\n        this.nativeElement.virtualSelectConf = this.virtualSelectConf;\n    }\n\n    /**\n     * Init group of selects with shared disabled options\n     */\n    initSelectGroupWatchdog() {\n        console.log('init form groups');\n\n        // create list of selected items\n        this.selects.forEach(element => {\n            this.setSelectedOptions(element);\n        });\n\n        // create list of original disabled items from DOM excluding selected options from this group\n        this.selects.forEach(element => {\n            element.permaDisabledOptions = [];\n\n            let disabledItems = element.getDisabledOptions();\n            let targetGroup = element.getAttribute('data-select-group');\n            let groupArray = this.selectGroupsValues.get(targetGroup);\n\n            disabledItems.forEach(item => {\n                if (groupArray.indexOf(item) < 0) {\n                    element.permaDisabledOptions.push(item);\n                }\n                //element.setAlwaysDisabledOptions(element.permaDisabledOptions);                \n            });\n\n            this.alwaysDisabledOptions = element.permaDisabledOptions;\n        });\n    }\n\n    /**\n     * Handles value change of a select/multiselect that are part of a group\n     * @param {Event} ev \n     */\n    onSelectChange(ev) {\n        let targetGroup = ev.target.getAttribute('data-select-group');\n        this.selectGroups.set(targetGroup, '');\n\n        // insert all values\n        this.selects.forEach(element => {\n            this.setSelectedOptions(element);\n        });\n\n        // then refresh disabled options\n        this.selects.forEach(element => {\n            this.setDisabledOptions(element);\n        });\n    }\n\n    /**\n     * Sets the selected values of the select/multiselect that are part of a group\n     * @param {HTMLElement} element \n     */\n    setSelectedOptions(element) {\n        let group = element.getAttribute('data-select-group');\n        let groupArray = this.selectGroups.get(group);\n        let groupArrayValues = this.selectGroupsValues.get(group);\n\n        if (groupArray && groupArray.length > 0) {\n            this.selectGroups.set(group, groupArray.concat([element.getSelectedOptions()]));\n            this.selectGroupsValues.set(group, groupArrayValues.concat([element.value]));\n        }\n        else {\n            this.selectGroups.set(group, [element.getSelectedOptions()]);\n            this.selectGroupsValues.set(group, [element.value]);\n        }\n    }\n\n    /**\n     * Sets the disabled options of the select/multiselect that are part of a group\n     * @param {HTMLElement} element \n     */\n    setDisabledOptions(element) {\n        let group = element.getAttribute('data-select-group');\n        let _disOptions = this.selectGroups.get(group);\n        let disOptions = _disOptions.concat();\n\n        for (var i = 0; i < disOptions.length; i++) {\n            disOptions[i] = disOptions[i] ? disOptions[i].value : '';\n        }\n\n        if (this.alwaysDisabledOptions && this.alwaysDisabledOptions.length > 0) {\n            element.setDisabledOptions(disOptions.concat(this.alwaysDisabledOptions), true);\n        }\n        else {\n            element.setDisabledOptions(disOptions, true);\n        }\n    }\n\n    /**\n     * Sets all options as enabled of the select/multiselect that are part of a group\n     */\n    setEnabledOptions() {\n        this.selects = this.querySelectorAll('.select-has-group');\n        this.selects.forEach(element => {\n            element.setEnabledOptions(true);\n        });\n    }\n\n    /**\n     * Inits Json populators, in case select/multiselect has external source\n     */\n    initJsonPopulators() {\n        var jsonElements = this.nativeElement.querySelectorAll('div[json-path]');\n\n        jsonElements.forEach(element => {\n            this.loadJson(element.getAttribute('json-path'), element.id, element.getAttribute('value'), jsonElements.length);\n        });\n\n        /* if (jsonElements.length > 0 && this.hasWatchdog) {\n        }\n        else if (this.hasWatchdog) {\n            this.initFormWatchdog();\n        } */\n\n\n        if (jsonElements.length <= 0 && this.hasWatchdog) {\n            this.initFormWatchdog();\n        }\n    }\n\n    /**\n     * Fetches the json data\n     * @param {string} dataurl \n     * @param {string} elID \n     * @param {string} currentValue \n     * @param {number} lengthToWait \n     */\n    loadJson(dataurl, elID, currentValue, lengthToWait) {\n        fetch(dataurl)\n            .then((response) => response.json())\n            .then((json) => this.initJsonSelect(json, elID, currentValue, lengthToWait));\n    }\n\n    /**\n     * Inits regular virtual-selects\n     */\n    initRegularSelects() {\n        let conf = Object.assign({\n            ele: 'select',\n            additionalClasses: 'regular-select',\n        }, this.virtualSelectConf);\n\n        VirtualSelect.init(conf);\n    }\n\n    /**\n     * Inits json populated virtual-select after the data has been fetched.\n     * It checks if all json virtual-selects are done and then finally\n     * initializes the form watchdog\n     * @param {json} jsonData \n     * @param {string} id \n     * @param {string} value \n     * @param {number} lengthToWait \n     */\n    initJsonSelect(jsonData, id, value, lengthToWait) {\n        let conf = Object.assign({\n            ele: '#' + id,\n            options: jsonData,\n            selectedValue: value.replaceAll(\" \", \"\").split(','),\n        }, this.virtualSelectConf);\n\n        VirtualSelect.init(conf);\n\n        if (++this.jsonPopulatesIndex == lengthToWait && this.hasWatchdog) {\n            this.watchdogEnabled = true;\n            this.initFormWatchdog();\n        }\n    }\n\n    /**\n     * Inits the watchdog to track changes of the elements inside the form\n     * after storing default values and setting up event listeners on all elements\n     */\n    initFormWatchdog() {\n        var wdForm = this.nativeElement;\n        this.formEls = wdForm.querySelectorAll('input:not([type=\"submit\"],.vscomp-search-input,#dseHidden,.radioimage-radio), textarea, select, .radioimages');\n\n        this.formEls.forEach(formEl => {\n\n            if (formEl.tagName.toLowerCase() === 'input' && formEl.getAttribute('type') === 'checkbox') {\n                this.formsMap.set(formEl.getAttribute('name'), formEl.checked);\n            }\n            else {\n                if (formEl.hasAttribute('original-data')) {\n                    this.formsMap.set(formEl.getAttribute('name'), formEl.getAttribute('original-data'));\n                }\n                else if (formEl.value) {\n                    this.formsMap.set(formEl.getAttribute('name'), formEl.value);\n                }\n                else {\n                    this.formsMap.set(formEl.getAttribute('name'), formEl.getAttribute('value'));\n                }\n            }\n\n            //console.log(this.formsMap);\n\n            /**\n             * Sets a function to check for simple validacy of field (empty or not empty).\n             * More complex validation happens via ajax calls, if the input element has\n             * that HTML property declared (please refer to input_element.php snippet)\n             * @returns {string}\n             */\n            formEl.fieldValid = function () {\n                var response = 'neutral';\n                let label = document.querySelector('label[for=\"' + this.name + '\"]');\n\n                if (label) {\n                    if (label.classList.contains('is-required') && this.value == '') {\n                        var response = 'error';\n                    }\n                    else if (this.value != '') {\n                        var response = 'valid';\n                    }\n                }\n\n                return response;\n            };\n\n            // sets initial icon for valid, not valid, or warning \n            this.setElementCheck(this.nativeElement, formEl);\n\n            let eventTarg = this.nativeElement.querySelector('#' + formEl.getAttribute('name'));\n\n            // add listeners for validation and change tracking to the element\n            // depending if its a div or actual input\n            if (eventTarg.tagName == 'DIV') {\n                eventTarg.addEventListener('change', function (ev) {\n\n                    let input = ev.target.querySelector('input');\n                    if (ev.currentTarget.classList.contains('radioimages')) {\n                        input = ev.currentTarget;\n                        ev.currentTarget.resetRadioGroup = function (val) {\n                            let radios = this.querySelectorAll('input');\n\n                            radios.forEach(element => {\n                                if (element.value != val)\n                                    element.checked = false;\n                                else\n                                    element.checked = true;\n                            });\n                        }\n                    }\n                    if (ev.target.value != this.formsMap.get(ev.target.getAttribute('name'))) {\n                        this.setElementChanged(this.nativeElement, input);\n                    }\n                    else {\n                        this.unsetElementChanged(input);\n                    }\n                    this.setElementCheck(this.nativeElement, input);\n\n                }.bind(this));\n            }\n            else {\n                eventTarg.addEventListener('input', function (ev) {\n                    if (ev.target.value != this.formsMap.get(ev.target.id)) {\n                        this.setElementChanged(this.nativeElement, ev.target);\n                    }\n                    else {\n                        this.unsetElementChanged(ev.target);\n                    }\n                    this.setElementCheck(this.nativeElement, ev.target);\n\n                }.bind(this));\n            }\n\n        });\n\n        // form is done initializing\n        this.formInitialized = true;\n\n        // bind some class functions and properties to native element\n        this.bindToDOMElement();\n    }\n\n    /**\n     * Sets icon for valid, not valid, or warning\n     * @param {HTMLElement} scope // function gets called inside class or on native element\n     * @param {HTMLElement} el // input element to be handled\n     */\n    setElementCheck(scope, el) {\n        if (el) {\n            let inputTarget = scope.querySelector('#' + el.getAttribute('name'));\n            let ajaxHandler = inputTarget.getAttribute('data-ajax-handler');\n\n            // if element has ajax handler for validation, call that function instead\n            // of the simple one here below\n            if (inputTarget && ajaxHandler) {\n                if (ajaxHandler) {\n                    window[ajaxHandler](inputTarget);\n                }\n            } else {\n                let check = scope.querySelector('.checks[data-for=\"' + el.name + '\"]');\n                let error = scope.querySelector('.errors[data-for=\"' + el.name + '\"]');\n                let input = scope.querySelector('#' + el.name);\n\n                if (input && error && check) {\n                    if (el.fieldValid() == 'valid') {\n                        error.classList.add('d-none');\n                        check.classList.remove('d-none');\n                        input.classList.add('filled');\n                    }\n                    else if (el.fieldValid() == 'error') {\n                        error.classList.remove('d-none');\n                        check.classList.add('d-none');\n                        input.classList.remove('filled');\n                    }\n                    else {\n                        error.classList.add('d-none');\n                        check.classList.add('d-none');\n                        input.classList.remove('filled');\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Sets an attribute change for element and dispatches an event\n     * for other pieces of code to handle an input change. It also\n     * updates the form overall change-status\n     * @param {HTMLElement} el \n     */\n    setElementChanged(scope, el) {\n        if (el) {\n            let inputTarget = scope.querySelector('#' + el.getAttribute('name'));\n            let changeHandler = inputTarget.getAttribute('data-change-handler');\n\n            if (inputTarget && changeHandler) {\n                if (changeHandler) {\n                    window[changeHandler](inputTarget);\n                }\n            }\n\n            el.setAttribute('statusChanged', '');\n            this.updateFormStatus();\n        }\n\n        document.dispatchEvent(new CustomEvent('current_form', { detail: { context: this.nativeElement } }));\n    }\n\n    /**\n     * Removes the status change form the element, meaning it has original value (again)\n     * and updates form overall change-status\n     * @param {HTMLElement} el \n     */\n    unsetElementChanged(el) {\n        if (el) {\n            el.removeAttribute('statusChanged');\n            this.updateFormStatus();\n        }\n    }\n\n    /**\n     * Updates the form status by checking the status of all elements inside.\n     * Dispatches an event if the form was changed for other pieces of code\n     * to handle changes in the form\n     */\n    updateFormStatus() {\n        let formChanged = false;\n        this.formEls.forEach(formEl => {\n            let status = formEl.hasAttribute('statusChanged');\n            formChanged = formChanged || status;\n        });\n\n        this.formChanged = formChanged;\n\n        if (this.nativeElement) {\n            this.nativeElement.formChanged = this.formChanged;\n            this.nativeElement.setAttribute('form_changed', this.formChanged);\n        }\n\n        this.submit.disabled = !this.formChanged;\n        if (this.reset)\n            this.reset.disabled = !this.formChanged;        \n\n        let containerpane = window.findParentContainer(this.nativeElement ? this.nativeElement.parentNode : this.parentNode, 'tab-pane');\n        document.dispatchEvent(new CustomEvent('form_changed', { detail: { paneID: containerpane.id, state: this.formChanged } }));\n    }\n\n    /**\n     * Enables all form elements and the form\n     */\n    enableForm() {\n        this.formEls.forEach(formEl => {\n            let eventTarg = this.querySelector('#' + formEl.getAttribute('name'));\n\n            if (eventTarg.classList.contains('vscomp-ele')) {\n                if (!eventTarg.classList.contains('force-disabled')) {\n                    eventTarg.enable();\n                }\n            }\n            else {\n                if (!formEl.classList.contains('force-disabled')) {\n                    formEl.disabled = false;\n                }\n            }\n        });\n\n        this.formDisabled = false;\n    }\n\n    /**\n     * Disables all form elements and the form\n     */\n    disableForm() {\n        this.formEls.forEach(formEl => {\n            let eventTarg = this.querySelector('#' + formEl.getAttribute('name'));\n\n            if (eventTarg.classList.contains('vscomp-ele')) {\n                if (!eventTarg.classList.contains('force-disabled')) {\n                    eventTarg.disable();\n                }\n            }\n            else {\n                if (!eventTarg.classList.contains('force-disabled')) {\n                    formEl.disabled = true;\n                }\n            }\n        });\n\n        this.formDisabled = true;\n    }\n\n    /**\n     * Resets the element to the default values\n     * @param {HTMLElement} el \n     */\n    resetElement(element) {\n        if (typeof element == 'string')\n            element = document.querySelector('input[name=\"' + element + '\"');\n\n        let val = this.formsMap.get(element.getAttribute('name'));\n\n        if (element.classList.contains('vscomp-hidden-input')) {\n            let form = element.form;\n            let el = form.querySelector('#' + element.getAttribute('name'));\n            el.setValue(val.split(','), true);\n        }\n        else if (element.classList.contains('radioimages')) {\n            element.value = val;\n            element.resetRadioGroup(val);\n        }\n        else if (this.tagName.toLowerCase() === 'input' && element.getAttribute('type') === 'checkbox') {\n            element.checked = val;\n        }\n        else {\n            element.value = val;\n        }\n\n        this.setElementCheck(this, element);\n        element.removeAttribute('statusChanged');\n\n        this.updateFormStatus();\n    }\n    /**\n     * Resets the form to default values and removes all status changes\n     */\n    resetToDefault() {\n        if (this.formChanged) {\n\n            this.selectGroups = new Map();\n            this.selectGroupsValues = new Map();\n\n            this.setEnabledOptions();\n\n            this.formEls.forEach(formEl => {\n                this.resetElement(formEl);\n                /* let val = this.formsMap.get(formEl.getAttribute('name'));\n\n                if (formEl.classList.contains('vscomp-hidden-input')) {\n                    let form = formEl.form;\n                    let el = form.querySelector('#' + formEl.getAttribute('name'));\n                    el.setValue(val.split(','), true);\n                }\n                else if (formEl.classList.contains('radioimages')) {\n                    formEl.value = val;\n                    formEl.resetRadioGroup(val);\n                }\n                else if (formEl.tagName.toLowerCase() === 'input' && formEl.getAttribute('type') === 'checkbox') {\n                    formEl.checked = val;\n                }\n                else {\n                    formEl.value = val;\n                }\n\n                this.setElementCheck(this, formEl);\n                formEl.removeAttribute('statusChanged'); */\n            });\n\n            this.formChanged = false;\n            this.setAttribute('form_changed', false);\n            this.submit.disabled = true;\n\n            if (this.reset)\n                this.reset.disabled = true;\n        }\n\n        let containerpane = window.findParentContainer(this.parentNode, 'tab-pane');\n        document.dispatchEvent(new CustomEvent('form_changed', { detail: { paneID: containerpane.id, state: this.formChanged } }));\n    }\n\n\n    /**\n     * Binds some class functions and properties to the native element\n     */\n    bindToDOMElement() {\n\n        this.nativeElement.resetToDefault = this.resetToDefault;\n        this.nativeElement.initSelectGroupWatchdog = this.initSelectGroupWatchdog;\n        this.nativeElement.setSelectedOptions = this.setSelectedOptions;\n        this.nativeElement.setDisabledOptions = this.setDisabledOptions;\n        this.nativeElement.setEnabledOptions = this.setEnabledOptions;\n        this.nativeElement.onSelectChange = this.onSelectChange;\n        this.nativeElement.setElementCheck = this.setElementCheck;\n        this.nativeElement.disableForm = this.disableForm;\n        this.nativeElement.enableForm = this.enableForm;\n        this.nativeElement.resetElement = this.resetElement;\n        this.nativeElement.updateFormStatus = this.updateFormStatus;\n        //this.nativeElement.findParentContainer = this.findParentContainer;\n\n        this.nativeElement.formInitialized = this.formInitialized;\n        this.nativeElement.formDisabled = this.formDisabled;\n        this.nativeElement.selectGroups = this.selectGroups;\n        this.nativeElement.selectGroupsValues = this.selectGroupsValues;\n        this.nativeElement.formEls = this.formEls;\n        this.nativeElement.formsMap = this.formsMap;\n        this.nativeElement.formChanged = this.formChanged;\n        this.nativeElement.submit = this.submit;\n        this.nativeElement.reset = this.reset;\n        //this.nativeElement.selects = this.selects;\n    }\n\n\n}\n\n\n","/**\n * IMPORTANT:::\n * AJAX functions work together with kirby regular controllers and JSON controllers.\n * \n * Regular call\n * For instance calling of a form submit\n * \n * \n * JSON call\n * We call a JSON URL and kirby handles in the\n * targeted controller the data and returns the required information. \n */\nimport JDSForm from \"./components/JDSForm\";\n\n\n/* function ajaxCall(type, url, callback) {\n    var xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = function () {\n        if (xmlhttp.readyState == XMLHttpRequest.DONE && xmlhttp.status == 200) {\n            var data = xmlhttp.responseText;\n            if (callback) callback(data);\n        }\n    };\n    xmlhttp.open(type, url, true);\n    xmlhttp.send();\n}\nObject.assign(window, { ajaxCall }); */\n\n\n/**\n * Sends a form via ajax by finding the forms submit button\n * or sending the form directly.\n * @param {HTMLElement} targetformID \n */\nfunction sendAjaxForm(targetformID) {\n    let targetform = document.getElementById(targetformID);\n    let btn_submit = targetform.querySelector('button[type=\"submit\"]');\n\n    // if form has type=submit or only button\n    if (btn_submit) {\n        btn_submit.click();\n    }\n    else {\n        targetform.submit();\n    }\n}\nObject.assign(window, { sendAjaxForm });\n\n\n/**\n * Validates if the impulse (topic) of the user's exhibit coincides with\n * the impulse of the exhibition's impulse of which the exhibit is part of.\n * Then sets validation icons\n * @param {HTMLElement} ajaxTarget \n * @returns \n */\nasync function checkImpulseRelationships(ajaxTarget) {\n    let impulse = ajaxTarget.value;\n    let page = ajaxTarget.form.parentElement.getAttribute('data-pageid');\n\n    if (!page) {\n        return;\n    }\n\n    let url = location.protocol + '//' + location.host + location.pathname;\n    url = `${url}.json/?impulseCheck=${impulse}&pageID=${page}`;\n    \n    try {\n        const response = await fetch(url);\n        const { impulseResult } = await response.json();\n\n        // we work with valid/invalid functions and then extra with 'warning' icon\n        let check = ajaxTarget.form.querySelector('.checks[data-for=\"' + ajaxTarget.id + '\"]');\n        let error = ajaxTarget.form.querySelector('.errors[data-for=\"' + ajaxTarget.id + '\"]');\n        let warning = ajaxTarget.form.querySelector('.warnings[data-for=\"' + ajaxTarget.id + '\"]');\n        let input = ajaxTarget.form.querySelector('#' + ajaxTarget.id);\n\n        if (impulseResult == 'result_success') {\n            if (input && error && check && warning) {\n                isValid(input, check, error);\n                warning.classList.add('d-none');\n            }\n        }\n        else if (impulseResult == 'result_warning') {\n            if (input && error && check && warning) {\n                error.classList.add('d-none');\n                warning.classList.remove('d-none');\n                check.classList.add('d-none');\n                input.classList.remove('filled');\n            }\n        }\n        else if (impulseResult == 'result_error') {\n            if (input && error && check && warning) {\n                isInvalid(input, check, error);\n                warning.classList.add('d-none');  \n            }\n        }\n        // default behaviour if no answer, sets valid or invalid if value empty or not\n        else {\n            if (impulse != '') {\n                warning.classList.add('d-none');\n                isValid(input, check, error);\n            }\n            else {\n                warning.classList.add('d-none');\n                isInvalid(input, check, error);\n            }\n        }\n\n    } catch (error) {\n        console.log('Fetch error: ', error);\n    }\n}\nObject.assign(window, { checkImpulseRelationships });\n\n/**\n * Validates for relationships in areas where the user has a\n * list of the participants of an exhibition. Then sets validation icons\n * @param {HTMLElement} ajaxTarget \n * @returns \n */\nasync function checkImpulseRelationshipsList(ajaxTarget) {\n\n    let curator = ajaxTarget.value;\n\n    // find right parent that contains data, since we work with tab-panes and modals\n    let parent = ajaxTarget.form.parentElement;\n    while (!parent.classList.contains('modal') && !parent.classList.contains('tab-pane')) {\n        parent = parent.parentElement;\n    }\n\n    let page = parent.getAttribute('data-pageid');\n    if (!page) {\n        return;\n    }\n\n    let url = location.protocol + '//' + location.host + location.pathname;\n    url = `${url}.json/?curatorID=${curator}&exhibitionID=${page}`;\n    \n    try {\n        const response = await fetch(url);\n        const { impulseResult } = await response.json();\n\n        // we work with valid/invalid functions and then extra with 'warning' icon\n        let check = ajaxTarget.form.querySelector('.checks[data-for=\"' + ajaxTarget.id + '\"]');\n        let error = ajaxTarget.form.querySelector('.errors[data-for=\"' + ajaxTarget.id + '\"]');\n        let warning = ajaxTarget.form.querySelector('.warnings[data-for=\"' + ajaxTarget.id + '\"]');\n        let input = ajaxTarget.form.querySelector('#' + ajaxTarget.id);\n\n        if (impulseResult == 'result_success') {\n            if (input && error && check && warning) {\n                isValid(input, check, error);\n                warning.classList.add('d-none');\n            }\n        }\n        else if (impulseResult == 'result_warning') {\n            if (input && error && check && warning) {\n                error.classList.add('d-none');\n                warning.classList.remove('d-none');\n                check.classList.add('d-none');\n                input.classList.remove('filled');\n            }\n        }\n        else if (impulseResult == 'result_error') {\n            if (input && error && check && warning) {\n                isInvalid(input, check, error);\n                warning.classList.add('d-none');                \n            }\n        }\n        else {\n            if (input && error && check && warning) {\n                error.classList.add('d-none');\n                check.classList.add('d-none');\n                warning.classList.add('d-none');\n                input.classList.remove('filled');\n            }\n        }\n\n    } catch (error) {\n        console.log('Fetch error: ', error);\n    }\n}\nObject.assign(window, { checkImpulseRelationshipsList });\n\n/**\n * Fetches the data for an exhibition before the exhibition modal (curator leader)\n * or the tab-pane (curator) Bootstrap elements are displayed. It then refreshes\n * the form data, since maybe another user has updated the exhibition in the meantime.\n * @param {HTMLElement} context \n */\nasync function fetchDynamicExhibitionData(context) {\n    if (context.id == 'pane-exhibition' || context.classList.contains('modal')) {\n        let page = context.getAttribute('data-pageid');\n        let url = location.protocol + '//' + location.host + location.pathname;\n        url = `${url}.json/?exhibitionpage=${page}`;\n        console.log(url);\n        try {\n            const response = await fetch(url);\n            const { isCuratorLeader, exhibitionDataResult, curatorInExhibition } = await response.json(); \n\n            if (isCuratorLeader || (exhibitionDataResult && curatorInExhibition)) {\n                let form = context.querySelector('form');\n                let dynamicPartForm = form.querySelector('.dynamic__content');\n                dynamicPartForm.innerHTML = exhibitionDataResult;\n                form = new JDSForm(form);\n            }\n            else {\n                /* in case the user was removbed from the exhibition, shows a warning. After browser refresh\n                the \"Exhibition\" tab would have disappeared for the curator */\n                context.classList.add('user-removed');\n                context.innerHTML = \"Sie wurden angeblich von den Ausstellungen entfernt. Bitte Fenster neu laden.\";\n            }\n\n            document.dispatchEvent(new CustomEvent('done_fetching_information', { detail: { context: context } }));\n\n        } catch (error) {\n            console.log('Fetch error: ', error);\n        }\n    }\n\n}\nObject.assign(window, { fetchDynamicExhibitionData });\n\n/**\n * Scrapes the embed URL to see if its valid and returns some data.\n * Then injects the embed into the DOM and sets validation icons.\n * @param {HTMLElement} ajaxTarget \n */\nasync function scrapeEmbed(ajaxTarget) {\n    let urlvalue = ajaxTarget.value;\n    urlvalue = urlvalue.split('?')[0].replace(/\\/$/, \"\");\n    ajaxTarget.value = urlvalue;\n    let url = location.protocol + '//' + location.host + location.pathname;\n    url = `${url}.json/?url=${urlvalue}`;\n    console.log(url);\n\n    // if this container exists, cookies were allowed\n    let embed_preview = document.getElementById('embed__preview');\n\n    if (urlvalue && embed_preview) {\n        try {\n            const response = await fetch(url);\n            const { embed } = await response.json();\n            \n            let check = ajaxTarget.form.querySelector('.checks[data-for=\"' + ajaxTarget.id + '\"]');\n            let error = ajaxTarget.form.querySelector('.errors[data-for=\"' + ajaxTarget.id + '\"]');\n            let input = ajaxTarget.form.querySelector('#' + ajaxTarget.id);            \n\n            if (embed.data) {\n                if (input && error && check) {\n                    isValid(input, check, error);\n                }\n\n                embed_preview.innerHTML = embed.data.code;\n                embed_preview.setAttribute('class', 'mx-auto ' + embed.data.providerName.toLowerCase());\n            }\n            else {\n                let embed_preview = document.querySelector('#embed__preview');\n                embed_preview.innerHTML = '<p>Es ist ein Fehler aufgetretten oder der Link ist ungültig und konnte nicht geladen werden.</p>';\n\n                if (input && error && check) {\n                    isInvalid(input, check, error);\n                }\n            }\n\n            if (window.twttr) {\n                window.twttr.widgets.load();\n            }\n            else if (embed.data.providerName.toLowerCase() == 'twitter') {\n                const embed = document.createElement('script');\n                embed.src = 'https://platform.twitter.com/widgets.js';\n                document.body.appendChild(embed);\n            }\n\n            if (window.instgrm) {\n                window.instgrm.Embeds.process();\n            }\n            else if (embed.data.providerName.toLowerCase() == 'instagram') {\n                const embed = document.createElement('script');\n                embed.src = 'https://www.instagram.com/embed.js';\n                document.body.appendChild(embed);\n            }\n\n            /* sadly no obvious way to reinitialize tiktokEmbed, so we readded everytime*/\n            if (embed.data.providerName.toLowerCase() == 'tiktok') {\n                const embed = document.createElement('script');\n                embed.src ='https://www.tiktok.com/embed.js';\n                document.body.appendChild(embed);\n            }\n\n        } catch (er) {\n            console.log('Fetch error: ', er);\n        }\n    }\n    else {\n        let check = ajaxTarget.form.querySelector('.checks[data-for=\"' + ajaxTarget.id + '\"]');\n        let error = ajaxTarget.form.querySelector('.errors[data-for=\"' + ajaxTarget.id + '\"]');\n        let input = ajaxTarget.form.querySelector('#' + ajaxTarget.id);\n        if (input && error && check) {\n            error.classList.remove('d-none');\n            check.classList.add('d-none');\n            input.classList.remove('filled');\n        }\n    }\n\n}\nObject.assign(window, { scrapeEmbed });\n\n\n/**\n * Handles file uploading via ajax so we can show a progressbar.\n * If everything goes well we reload the browser\n * @param {Event} ev \n */\nfunction fileUpload(ev) {\n    var btn = ev.currentTarget;\n    var form = btn.form;\n    var progress = form.querySelector(\".progress-bar\");\n    var fileInput = form.querySelector(\".files\");\n    let url = location.protocol + '//' + location.host + location.pathname + '.json';\n    var file = fileInput.files[0];\n\n    var formData = new FormData();\n    formData.append(fileInput.id, file);\n    formData.set(btn.name, btn.name);\n\n    var ajax = new XMLHttpRequest();\n    ajax.responseType = 'json';\n    ajax.open(\"POST\", url, true);\n\n    ajax.upload.onprogress = function (e) {\n        if (e.lengthComputable) {\n            var percentage = Math.round((e.loaded / e.total) * 100);\n            progress.style.width = percentage + \"%\";\n            progress.innerHTML = percentage + \"%\";\n            progress.setAttribute('aria-valuenow', percentage);\n        }\n        else {\n            console.log(\"Unable to compute progress information since the total size is unknown\");\n        }\n    }\n\n    ajax.onload = function (e) {\n        // if successfull, set a message in session for an alert and reload page \n        if (this.readyState == 4 && this.status == 200) {\n            sessionStorage.setItem('alert', this.response.alert);\n            location.reload();\n        }\n    };\n\n    ajax.send(formData);\n}\nObject.assign(window, { fileUpload });\n\n/**\n * Validation for the image selection in the form for physical-object\n * based on a radio button group. Checks if one is selected and then\n * sets as valid if 'not empty' is selected.\n * @param {HTMLElement} ajaxTarget \n */\nfunction checkRadioGroupGallery(ajaxTarget) {\n    var radios = document.getElementsByName(ajaxTarget.id);\n    var radiosArray = Array.prototype.slice.call(radios);\n\n    radiosArray = radiosArray.filter(function (radio) {\n        return radio.tagName !== \"DIV\";\n    });\n\n    var firstRadio = radiosArray[0]; // we use the first radio as a reference, since we know it always will exist (empty value)\n    var checkedRadio = radiosArray.find((radio) => radio.checked);\n\n    let check = firstRadio.form.querySelector('.checks[data-for=\"' + ajaxTarget.id + '\"]');\n    let error = firstRadio.form.querySelector('.errors[data-for=\"' + ajaxTarget.id + '\"]');\n    let input = ajaxTarget;\n\n    if (checkedRadio) {\n        input.setAttribute('value', checkedRadio.value);\n\n        if (checkedRadio.value == \"\") {\n            isInvalid(input, check, error);\n        }\n        else {\n            isValid(input, check, error);\n        }\n    }\n    else {\n        firstRadio.checked = true;\n        isInvalid(input, check, error);\n    }\n}\nObject.assign(window, { checkRadioGroupGallery });\n\n\nvar usernameField = document.querySelector('input#username');\nlet usernameDelayTimer;\nlet usernameDelay = 300;\n/**\n * Validates the username to see if it's unique in the whole system\n * @param {HTMLElement} element \n */\nfunction checkUsername(element) {\n    const form = element.form;\n    let check = form.querySelector('.checks[data-for=\"' + element.name + '\"]');\n    let error = form.querySelector('.errors[data-for=\"' + element.name + '\"]');\n\n    clearTimeout(usernameDelayTimer);\n    if (!usernameField.form.hasAttribute('user-error')) {\n        if (element.value != '') {\n            usernameDelayTimer = setTimeout(async function () {\n\n                if (element.getAttribute('statuschanged') != null) {\n                    let _path = location.protocol + '//' + location.host + location.pathname + '.json?username=' + element.value;\n                    try {\n                        const response = await fetch(_path);\n                        const { usernameExists } = await response.json();\n\n                        if (usernameExists) {\n                            console.log(\"user-exists\");\n                            isInvalid(element, check, error);\n                        }\n                        else {\n                            isValid(element, check, error);\n                        }\n\n                        element.removeAttribute('first-run-username');\n                    }\n                    catch (error) {\n                        console.log('Fetch error: ', error);\n                    }\n                }\n                else {\n                    isValid(element, check, error);\n                }\n\n            }.bind(element), usernameDelay);\n        }\n        else {\n            isInvalid(element, check, error);\n        }\n    }\n    else {\n        isInvalid(element, check, error);\n        usernameField.form.removeAttribute('user-error');\n    }\n}\nObject.assign(window, { checkUsername });\n\n/**\n * Handles a exhibit type change, since this requires removing\n * all files (like videos, etc.) for avoiding data garbage. After\n * a change is triggered a Bootstrap modal is opened via 'createPhantomToggle'\n * @param {HTMLElement} element \n */\nfunction handleExhibitTypeChange(element) {\n    let form = element.form;\n    createPhantomToggle({\n        headline: 'Achtung',\n        message: 'Wenn Sie den Objekttyp verändern werden wird das Objekt gespeichert und manche Daten zurückgesetzt. Sind Sie sicher?',\n        func: 'sendAjaxForm',\n        data: form.id,\n        contextCancel: '#' + form.id,\n        funcCancel: 'resetElement',\n        dataCancel: element.id,\n        confirmLabel: 'Ja, ändern',\n    });\n}\nObject.assign(window, { handleExhibitTypeChange });\n\n\n/**\n * Sets the visual validation for valid, invalid and if the input\n * is shown as filled. The warning icon is not included and must be done\n * separately for special cases\n * @param {HTMLElement} element \n * @param {HTMLElement} check \n * @param {HTMLElement} error \n */\nfunction isValid(element, check, error) {\n    check.classList.remove('d-none');\n    error.classList.add('d-none');\n    element.classList.add('filled');\n}\n\n/**\n * Sets the visual invalidation for valid, invalid and if the input\n * is shown as filled. The warning icon is not included and must be done\n * separately for special cases\n * @param {HTMLElement} element \n * @param {HTMLElement} check \n * @param {HTMLElement} error \n */\nfunction isInvalid(element, check, error) {\n    check.classList.add('d-none');\n    error.classList.remove('d-none');\n    element.classList.remove('filled');\n}\n\n"],"mappings":"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"}